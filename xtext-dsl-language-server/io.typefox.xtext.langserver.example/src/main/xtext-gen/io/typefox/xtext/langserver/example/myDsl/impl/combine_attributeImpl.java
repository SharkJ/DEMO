/**
 * generated by Xtext 2.13.0
 */
package io.typefox.xtext.langserver.example.myDsl.impl;

import io.typefox.xtext.langserver.example.myDsl.MyDslPackage;
import io.typefox.xtext.langserver.example.myDsl.combine_attribute;
import io.typefox.xtext.langserver.example.myDsl.trigger_attribute;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>combine attribute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.combine_attributeImpl#getTrigger_attribute <em>Trigger attribute</em>}</li>
 * </ul>
 *
 * @generated
 */
public class combine_attributeImpl extends MinimalEObjectImpl.Container implements combine_attribute
{
  /**
   * The cached value of the '{@link #getTrigger_attribute() <em>Trigger attribute</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrigger_attribute()
   * @generated
   * @ordered
   */
  protected trigger_attribute trigger_attribute;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected combine_attributeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.COMBINE_ATTRIBUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public trigger_attribute getTrigger_attribute()
  {
    return trigger_attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTrigger_attribute(trigger_attribute newTrigger_attribute, NotificationChain msgs)
  {
    trigger_attribute oldTrigger_attribute = trigger_attribute;
    trigger_attribute = newTrigger_attribute;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMBINE_ATTRIBUTE__TRIGGER_ATTRIBUTE, oldTrigger_attribute, newTrigger_attribute);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTrigger_attribute(trigger_attribute newTrigger_attribute)
  {
    if (newTrigger_attribute != trigger_attribute)
    {
      NotificationChain msgs = null;
      if (trigger_attribute != null)
        msgs = ((InternalEObject)trigger_attribute).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMBINE_ATTRIBUTE__TRIGGER_ATTRIBUTE, null, msgs);
      if (newTrigger_attribute != null)
        msgs = ((InternalEObject)newTrigger_attribute).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMBINE_ATTRIBUTE__TRIGGER_ATTRIBUTE, null, msgs);
      msgs = basicSetTrigger_attribute(newTrigger_attribute, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMBINE_ATTRIBUTE__TRIGGER_ATTRIBUTE, newTrigger_attribute, newTrigger_attribute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.COMBINE_ATTRIBUTE__TRIGGER_ATTRIBUTE:
        return basicSetTrigger_attribute(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.COMBINE_ATTRIBUTE__TRIGGER_ATTRIBUTE:
        return getTrigger_attribute();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.COMBINE_ATTRIBUTE__TRIGGER_ATTRIBUTE:
        setTrigger_attribute((trigger_attribute)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMBINE_ATTRIBUTE__TRIGGER_ATTRIBUTE:
        setTrigger_attribute((trigger_attribute)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMBINE_ATTRIBUTE__TRIGGER_ATTRIBUTE:
        return trigger_attribute != null;
    }
    return super.eIsSet(featureID);
  }

} //combine_attributeImpl
