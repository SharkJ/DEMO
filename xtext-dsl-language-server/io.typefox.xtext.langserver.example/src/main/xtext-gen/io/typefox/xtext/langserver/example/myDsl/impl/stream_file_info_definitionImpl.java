/**
 * generated by Xtext 2.13.0
 */
package io.typefox.xtext.langserver.example.myDsl.impl;

import io.typefox.xtext.langserver.example.myDsl.MyDslPackage;
import io.typefox.xtext.langserver.example.myDsl.stream_attachment_attribute;
import io.typefox.xtext.langserver.example.myDsl.stream_file_info_definition;
import io.typefox.xtext.langserver.example.myDsl.stream_file_name_attribute;
import io.typefox.xtext.langserver.example.myDsl.stream_mime_type_attribute;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>stream file info definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.stream_file_info_definitionImpl#getStream_file_name_attribute <em>Stream file name attribute</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.stream_file_info_definitionImpl#getStream_mime_type_attribute <em>Stream mime type attribute</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.stream_file_info_definitionImpl#getStream_attachment_attribute <em>Stream attachment attribute</em>}</li>
 * </ul>
 *
 * @generated
 */
public class stream_file_info_definitionImpl extends MinimalEObjectImpl.Container implements stream_file_info_definition
{
  /**
   * The cached value of the '{@link #getStream_file_name_attribute() <em>Stream file name attribute</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStream_file_name_attribute()
   * @generated
   * @ordered
   */
  protected stream_file_name_attribute stream_file_name_attribute;

  /**
   * The cached value of the '{@link #getStream_mime_type_attribute() <em>Stream mime type attribute</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStream_mime_type_attribute()
   * @generated
   * @ordered
   */
  protected stream_mime_type_attribute stream_mime_type_attribute;

  /**
   * The cached value of the '{@link #getStream_attachment_attribute() <em>Stream attachment attribute</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStream_attachment_attribute()
   * @generated
   * @ordered
   */
  protected stream_attachment_attribute stream_attachment_attribute;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected stream_file_info_definitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.STREAM_FILE_INFO_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public stream_file_name_attribute getStream_file_name_attribute()
  {
    return stream_file_name_attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStream_file_name_attribute(stream_file_name_attribute newStream_file_name_attribute, NotificationChain msgs)
  {
    stream_file_name_attribute oldStream_file_name_attribute = stream_file_name_attribute;
    stream_file_name_attribute = newStream_file_name_attribute;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_FILE_NAME_ATTRIBUTE, oldStream_file_name_attribute, newStream_file_name_attribute);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStream_file_name_attribute(stream_file_name_attribute newStream_file_name_attribute)
  {
    if (newStream_file_name_attribute != stream_file_name_attribute)
    {
      NotificationChain msgs = null;
      if (stream_file_name_attribute != null)
        msgs = ((InternalEObject)stream_file_name_attribute).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_FILE_NAME_ATTRIBUTE, null, msgs);
      if (newStream_file_name_attribute != null)
        msgs = ((InternalEObject)newStream_file_name_attribute).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_FILE_NAME_ATTRIBUTE, null, msgs);
      msgs = basicSetStream_file_name_attribute(newStream_file_name_attribute, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_FILE_NAME_ATTRIBUTE, newStream_file_name_attribute, newStream_file_name_attribute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public stream_mime_type_attribute getStream_mime_type_attribute()
  {
    return stream_mime_type_attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStream_mime_type_attribute(stream_mime_type_attribute newStream_mime_type_attribute, NotificationChain msgs)
  {
    stream_mime_type_attribute oldStream_mime_type_attribute = stream_mime_type_attribute;
    stream_mime_type_attribute = newStream_mime_type_attribute;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_MIME_TYPE_ATTRIBUTE, oldStream_mime_type_attribute, newStream_mime_type_attribute);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStream_mime_type_attribute(stream_mime_type_attribute newStream_mime_type_attribute)
  {
    if (newStream_mime_type_attribute != stream_mime_type_attribute)
    {
      NotificationChain msgs = null;
      if (stream_mime_type_attribute != null)
        msgs = ((InternalEObject)stream_mime_type_attribute).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_MIME_TYPE_ATTRIBUTE, null, msgs);
      if (newStream_mime_type_attribute != null)
        msgs = ((InternalEObject)newStream_mime_type_attribute).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_MIME_TYPE_ATTRIBUTE, null, msgs);
      msgs = basicSetStream_mime_type_attribute(newStream_mime_type_attribute, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_MIME_TYPE_ATTRIBUTE, newStream_mime_type_attribute, newStream_mime_type_attribute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public stream_attachment_attribute getStream_attachment_attribute()
  {
    return stream_attachment_attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStream_attachment_attribute(stream_attachment_attribute newStream_attachment_attribute, NotificationChain msgs)
  {
    stream_attachment_attribute oldStream_attachment_attribute = stream_attachment_attribute;
    stream_attachment_attribute = newStream_attachment_attribute;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_ATTACHMENT_ATTRIBUTE, oldStream_attachment_attribute, newStream_attachment_attribute);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStream_attachment_attribute(stream_attachment_attribute newStream_attachment_attribute)
  {
    if (newStream_attachment_attribute != stream_attachment_attribute)
    {
      NotificationChain msgs = null;
      if (stream_attachment_attribute != null)
        msgs = ((InternalEObject)stream_attachment_attribute).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_ATTACHMENT_ATTRIBUTE, null, msgs);
      if (newStream_attachment_attribute != null)
        msgs = ((InternalEObject)newStream_attachment_attribute).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_ATTACHMENT_ATTRIBUTE, null, msgs);
      msgs = basicSetStream_attachment_attribute(newStream_attachment_attribute, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_ATTACHMENT_ATTRIBUTE, newStream_attachment_attribute, newStream_attachment_attribute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_FILE_NAME_ATTRIBUTE:
        return basicSetStream_file_name_attribute(null, msgs);
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_MIME_TYPE_ATTRIBUTE:
        return basicSetStream_mime_type_attribute(null, msgs);
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_ATTACHMENT_ATTRIBUTE:
        return basicSetStream_attachment_attribute(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_FILE_NAME_ATTRIBUTE:
        return getStream_file_name_attribute();
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_MIME_TYPE_ATTRIBUTE:
        return getStream_mime_type_attribute();
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_ATTACHMENT_ATTRIBUTE:
        return getStream_attachment_attribute();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_FILE_NAME_ATTRIBUTE:
        setStream_file_name_attribute((stream_file_name_attribute)newValue);
        return;
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_MIME_TYPE_ATTRIBUTE:
        setStream_mime_type_attribute((stream_mime_type_attribute)newValue);
        return;
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_ATTACHMENT_ATTRIBUTE:
        setStream_attachment_attribute((stream_attachment_attribute)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_FILE_NAME_ATTRIBUTE:
        setStream_file_name_attribute((stream_file_name_attribute)null);
        return;
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_MIME_TYPE_ATTRIBUTE:
        setStream_mime_type_attribute((stream_mime_type_attribute)null);
        return;
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_ATTACHMENT_ATTRIBUTE:
        setStream_attachment_attribute((stream_attachment_attribute)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_FILE_NAME_ATTRIBUTE:
        return stream_file_name_attribute != null;
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_MIME_TYPE_ATTRIBUTE:
        return stream_mime_type_attribute != null;
      case MyDslPackage.STREAM_FILE_INFO_DEFINITION__STREAM_ATTACHMENT_ATTRIBUTE:
        return stream_attachment_attribute != null;
    }
    return super.eIsSet(featureID);
  }

} //stream_file_info_definitionImpl
