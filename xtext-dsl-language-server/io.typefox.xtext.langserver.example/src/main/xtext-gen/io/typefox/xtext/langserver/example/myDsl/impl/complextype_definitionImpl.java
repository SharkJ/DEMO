/**
 * generated by Xtext 2.13.0
 */
package io.typefox.xtext.langserver.example.myDsl.impl;

import io.typefox.xtext.langserver.example.myDsl.MyDslPackage;
import io.typefox.xtext.langserver.example.myDsl.complextype_definition;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>complextype definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.complextype_definitionImpl#getComplextype_definition_complextype_name <em>Complextype definition complextype name</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.complextype_definitionImpl#getAlt <em>Alt</em>}</li>
 * </ul>
 *
 * @generated
 */
public class complextype_definitionImpl extends MainElementImpl implements complextype_definition
{
  /**
   * The default value of the '{@link #getComplextype_definition_complextype_name() <em>Complextype definition complextype name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComplextype_definition_complextype_name()
   * @generated
   * @ordered
   */
  protected static final String COMPLEXTYPE_DEFINITION_COMPLEXTYPE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getComplextype_definition_complextype_name() <em>Complextype definition complextype name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComplextype_definition_complextype_name()
   * @generated
   * @ordered
   */
  protected String complextype_definition_complextype_name = COMPLEXTYPE_DEFINITION_COMPLEXTYPE_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getAlt() <em>Alt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlt()
   * @generated
   * @ordered
   */
  protected EObject alt;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected complextype_definitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.COMPLEXTYPE_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getComplextype_definition_complextype_name()
  {
    return complextype_definition_complextype_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComplextype_definition_complextype_name(String newComplextype_definition_complextype_name)
  {
    String oldComplextype_definition_complextype_name = complextype_definition_complextype_name;
    complextype_definition_complextype_name = newComplextype_definition_complextype_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMPLEXTYPE_DEFINITION__COMPLEXTYPE_DEFINITION_COMPLEXTYPE_NAME, oldComplextype_definition_complextype_name, complextype_definition_complextype_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EObject getAlt()
  {
    return alt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAlt(EObject newAlt, NotificationChain msgs)
  {
    EObject oldAlt = alt;
    alt = newAlt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMPLEXTYPE_DEFINITION__ALT, oldAlt, newAlt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAlt(EObject newAlt)
  {
    if (newAlt != alt)
    {
      NotificationChain msgs = null;
      if (alt != null)
        msgs = ((InternalEObject)alt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMPLEXTYPE_DEFINITION__ALT, null, msgs);
      if (newAlt != null)
        msgs = ((InternalEObject)newAlt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMPLEXTYPE_DEFINITION__ALT, null, msgs);
      msgs = basicSetAlt(newAlt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMPLEXTYPE_DEFINITION__ALT, newAlt, newAlt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPLEXTYPE_DEFINITION__ALT:
        return basicSetAlt(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPLEXTYPE_DEFINITION__COMPLEXTYPE_DEFINITION_COMPLEXTYPE_NAME:
        return getComplextype_definition_complextype_name();
      case MyDslPackage.COMPLEXTYPE_DEFINITION__ALT:
        return getAlt();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPLEXTYPE_DEFINITION__COMPLEXTYPE_DEFINITION_COMPLEXTYPE_NAME:
        setComplextype_definition_complextype_name((String)newValue);
        return;
      case MyDslPackage.COMPLEXTYPE_DEFINITION__ALT:
        setAlt((EObject)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPLEXTYPE_DEFINITION__COMPLEXTYPE_DEFINITION_COMPLEXTYPE_NAME:
        setComplextype_definition_complextype_name(COMPLEXTYPE_DEFINITION_COMPLEXTYPE_NAME_EDEFAULT);
        return;
      case MyDslPackage.COMPLEXTYPE_DEFINITION__ALT:
        setAlt((EObject)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPLEXTYPE_DEFINITION__COMPLEXTYPE_DEFINITION_COMPLEXTYPE_NAME:
        return COMPLEXTYPE_DEFINITION_COMPLEXTYPE_NAME_EDEFAULT == null ? complextype_definition_complextype_name != null : !COMPLEXTYPE_DEFINITION_COMPLEXTYPE_NAME_EDEFAULT.equals(complextype_definition_complextype_name);
      case MyDslPackage.COMPLEXTYPE_DEFINITION__ALT:
        return alt != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (complextype_definition_complextype_name: ");
    result.append(complextype_definition_complextype_name);
    result.append(')');
    return result.toString();
  }

} //complextype_definitionImpl
