/**
 * generated by Xtext 2.13.0
 */
package io.typefox.xtext.langserver.example.myDsl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>compute expression atom</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.compute_expression_atom#getCompute_expression_atom_datasource_ref <em>Compute expression atom datasource ref</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.compute_expression_atom#getProjection_flag_condition <em>Projection flag condition</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.compute_expression_atom#getCompute_expression_atom_dataitem_ref <em>Compute expression atom dataitem ref</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.compute_expression_atom#getCompute_expression_atom_value <em>Compute expression atom value</em>}</li>
 * </ul>
 *
 * @see io.typefox.xtext.langserver.example.myDsl.MyDslPackage#getcompute_expression_atom()
 * @model
 * @generated
 */
public interface compute_expression_atom extends EObject
{
  /**
   * Returns the value of the '<em><b>Compute expression atom datasource ref</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Compute expression atom datasource ref</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Compute expression atom datasource ref</em>' attribute.
   * @see #setCompute_expression_atom_datasource_ref(String)
   * @see io.typefox.xtext.langserver.example.myDsl.MyDslPackage#getcompute_expression_atom_Compute_expression_atom_datasource_ref()
   * @model
   * @generated
   */
  String getCompute_expression_atom_datasource_ref();

  /**
   * Sets the value of the '{@link io.typefox.xtext.langserver.example.myDsl.compute_expression_atom#getCompute_expression_atom_datasource_ref <em>Compute expression atom datasource ref</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Compute expression atom datasource ref</em>' attribute.
   * @see #getCompute_expression_atom_datasource_ref()
   * @generated
   */
  void setCompute_expression_atom_datasource_ref(String value);

  /**
   * Returns the value of the '<em><b>Projection flag condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Projection flag condition</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Projection flag condition</em>' containment reference.
   * @see #setProjection_flag_condition(projection_flag_condition)
   * @see io.typefox.xtext.langserver.example.myDsl.MyDslPackage#getcompute_expression_atom_Projection_flag_condition()
   * @model containment="true"
   * @generated
   */
  projection_flag_condition getProjection_flag_condition();

  /**
   * Sets the value of the '{@link io.typefox.xtext.langserver.example.myDsl.compute_expression_atom#getProjection_flag_condition <em>Projection flag condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Projection flag condition</em>' containment reference.
   * @see #getProjection_flag_condition()
   * @generated
   */
  void setProjection_flag_condition(projection_flag_condition value);

  /**
   * Returns the value of the '<em><b>Compute expression atom dataitem ref</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Compute expression atom dataitem ref</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Compute expression atom dataitem ref</em>' attribute.
   * @see #setCompute_expression_atom_dataitem_ref(String)
   * @see io.typefox.xtext.langserver.example.myDsl.MyDslPackage#getcompute_expression_atom_Compute_expression_atom_dataitem_ref()
   * @model
   * @generated
   */
  String getCompute_expression_atom_dataitem_ref();

  /**
   * Sets the value of the '{@link io.typefox.xtext.langserver.example.myDsl.compute_expression_atom#getCompute_expression_atom_dataitem_ref <em>Compute expression atom dataitem ref</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Compute expression atom dataitem ref</em>' attribute.
   * @see #getCompute_expression_atom_dataitem_ref()
   * @generated
   */
  void setCompute_expression_atom_dataitem_ref(String value);

  /**
   * Returns the value of the '<em><b>Compute expression atom value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Compute expression atom value</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Compute expression atom value</em>' containment reference.
   * @see #setCompute_expression_atom_value(compute_expression_atom_value)
   * @see io.typefox.xtext.langserver.example.myDsl.MyDslPackage#getcompute_expression_atom_Compute_expression_atom_value()
   * @model containment="true"
   * @generated
   */
  compute_expression_atom_value getCompute_expression_atom_value();

  /**
   * Sets the value of the '{@link io.typefox.xtext.langserver.example.myDsl.compute_expression_atom#getCompute_expression_atom_value <em>Compute expression atom value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Compute expression atom value</em>' containment reference.
   * @see #getCompute_expression_atom_value()
   * @generated
   */
  void setCompute_expression_atom_value(compute_expression_atom_value value);

} // compute_expression_atom
