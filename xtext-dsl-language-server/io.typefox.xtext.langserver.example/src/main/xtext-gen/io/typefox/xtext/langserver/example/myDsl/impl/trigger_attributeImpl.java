/**
 * generated by Xtext 2.13.0
 */
package io.typefox.xtext.langserver.example.myDsl.impl;

import io.typefox.xtext.langserver.example.myDsl.MyDslPackage;
import io.typefox.xtext.langserver.example.myDsl.trigger_attribute;
import io.typefox.xtext.langserver.example.myDsl.trigger_attribute_table_columns;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>trigger attribute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.trigger_attributeImpl#getTrigger_attribute_attribute_name <em>Trigger attribute attribute name</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.trigger_attributeImpl#getTrigger_attribute_table_columns <em>Trigger attribute table columns</em>}</li>
 * </ul>
 *
 * @generated
 */
public class trigger_attributeImpl extends MinimalEObjectImpl.Container implements trigger_attribute
{
  /**
   * The default value of the '{@link #getTrigger_attribute_attribute_name() <em>Trigger attribute attribute name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrigger_attribute_attribute_name()
   * @generated
   * @ordered
   */
  protected static final String TRIGGER_ATTRIBUTE_ATTRIBUTE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTrigger_attribute_attribute_name() <em>Trigger attribute attribute name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrigger_attribute_attribute_name()
   * @generated
   * @ordered
   */
  protected String trigger_attribute_attribute_name = TRIGGER_ATTRIBUTE_ATTRIBUTE_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getTrigger_attribute_table_columns() <em>Trigger attribute table columns</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrigger_attribute_table_columns()
   * @generated
   * @ordered
   */
  protected trigger_attribute_table_columns trigger_attribute_table_columns;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected trigger_attributeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.TRIGGER_ATTRIBUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTrigger_attribute_attribute_name()
  {
    return trigger_attribute_attribute_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTrigger_attribute_attribute_name(String newTrigger_attribute_attribute_name)
  {
    String oldTrigger_attribute_attribute_name = trigger_attribute_attribute_name;
    trigger_attribute_attribute_name = newTrigger_attribute_attribute_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_ATTRIBUTE_NAME, oldTrigger_attribute_attribute_name, trigger_attribute_attribute_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public trigger_attribute_table_columns getTrigger_attribute_table_columns()
  {
    return trigger_attribute_table_columns;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTrigger_attribute_table_columns(trigger_attribute_table_columns newTrigger_attribute_table_columns, NotificationChain msgs)
  {
    trigger_attribute_table_columns oldTrigger_attribute_table_columns = trigger_attribute_table_columns;
    trigger_attribute_table_columns = newTrigger_attribute_table_columns;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_TABLE_COLUMNS, oldTrigger_attribute_table_columns, newTrigger_attribute_table_columns);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTrigger_attribute_table_columns(trigger_attribute_table_columns newTrigger_attribute_table_columns)
  {
    if (newTrigger_attribute_table_columns != trigger_attribute_table_columns)
    {
      NotificationChain msgs = null;
      if (trigger_attribute_table_columns != null)
        msgs = ((InternalEObject)trigger_attribute_table_columns).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_TABLE_COLUMNS, null, msgs);
      if (newTrigger_attribute_table_columns != null)
        msgs = ((InternalEObject)newTrigger_attribute_table_columns).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_TABLE_COLUMNS, null, msgs);
      msgs = basicSetTrigger_attribute_table_columns(newTrigger_attribute_table_columns, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_TABLE_COLUMNS, newTrigger_attribute_table_columns, newTrigger_attribute_table_columns));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_TABLE_COLUMNS:
        return basicSetTrigger_attribute_table_columns(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_ATTRIBUTE_NAME:
        return getTrigger_attribute_attribute_name();
      case MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_TABLE_COLUMNS:
        return getTrigger_attribute_table_columns();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_ATTRIBUTE_NAME:
        setTrigger_attribute_attribute_name((String)newValue);
        return;
      case MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_TABLE_COLUMNS:
        setTrigger_attribute_table_columns((trigger_attribute_table_columns)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_ATTRIBUTE_NAME:
        setTrigger_attribute_attribute_name(TRIGGER_ATTRIBUTE_ATTRIBUTE_NAME_EDEFAULT);
        return;
      case MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_TABLE_COLUMNS:
        setTrigger_attribute_table_columns((trigger_attribute_table_columns)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_ATTRIBUTE_NAME:
        return TRIGGER_ATTRIBUTE_ATTRIBUTE_NAME_EDEFAULT == null ? trigger_attribute_attribute_name != null : !TRIGGER_ATTRIBUTE_ATTRIBUTE_NAME_EDEFAULT.equals(trigger_attribute_attribute_name);
      case MyDslPackage.TRIGGER_ATTRIBUTE__TRIGGER_ATTRIBUTE_TABLE_COLUMNS:
        return trigger_attribute_table_columns != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (trigger_attribute_attribute_name: ");
    result.append(trigger_attribute_attribute_name);
    result.append(')');
    return result.toString();
  }

} //trigger_attributeImpl
