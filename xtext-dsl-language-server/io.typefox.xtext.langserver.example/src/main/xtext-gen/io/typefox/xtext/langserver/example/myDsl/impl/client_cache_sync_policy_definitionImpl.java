/**
 * generated by Xtext 2.13.0
 */
package io.typefox.xtext.langserver.example.myDsl.impl;

import io.typefox.xtext.langserver.example.myDsl.MyDslPackage;
import io.typefox.xtext.langserver.example.myDsl.cache_invalidation_definition;
import io.typefox.xtext.langserver.example.myDsl.client_cache_sync_policy_definition;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>client cache sync policy definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.client_cache_sync_policy_definitionImpl#getCache_invalidation_definition <em>Cache invalidation definition</em>}</li>
 * </ul>
 *
 * @generated
 */
public class client_cache_sync_policy_definitionImpl extends sync_policy_definitionImpl implements client_cache_sync_policy_definition
{
  /**
   * The cached value of the '{@link #getCache_invalidation_definition() <em>Cache invalidation definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCache_invalidation_definition()
   * @generated
   * @ordered
   */
  protected cache_invalidation_definition cache_invalidation_definition;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected client_cache_sync_policy_definitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.CLIENT_CACHE_SYNC_POLICY_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public cache_invalidation_definition getCache_invalidation_definition()
  {
    return cache_invalidation_definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCache_invalidation_definition(cache_invalidation_definition newCache_invalidation_definition, NotificationChain msgs)
  {
    cache_invalidation_definition oldCache_invalidation_definition = cache_invalidation_definition;
    cache_invalidation_definition = newCache_invalidation_definition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.CLIENT_CACHE_SYNC_POLICY_DEFINITION__CACHE_INVALIDATION_DEFINITION, oldCache_invalidation_definition, newCache_invalidation_definition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCache_invalidation_definition(cache_invalidation_definition newCache_invalidation_definition)
  {
    if (newCache_invalidation_definition != cache_invalidation_definition)
    {
      NotificationChain msgs = null;
      if (cache_invalidation_definition != null)
        msgs = ((InternalEObject)cache_invalidation_definition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CLIENT_CACHE_SYNC_POLICY_DEFINITION__CACHE_INVALIDATION_DEFINITION, null, msgs);
      if (newCache_invalidation_definition != null)
        msgs = ((InternalEObject)newCache_invalidation_definition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CLIENT_CACHE_SYNC_POLICY_DEFINITION__CACHE_INVALIDATION_DEFINITION, null, msgs);
      msgs = basicSetCache_invalidation_definition(newCache_invalidation_definition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CLIENT_CACHE_SYNC_POLICY_DEFINITION__CACHE_INVALIDATION_DEFINITION, newCache_invalidation_definition, newCache_invalidation_definition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.CLIENT_CACHE_SYNC_POLICY_DEFINITION__CACHE_INVALIDATION_DEFINITION:
        return basicSetCache_invalidation_definition(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.CLIENT_CACHE_SYNC_POLICY_DEFINITION__CACHE_INVALIDATION_DEFINITION:
        return getCache_invalidation_definition();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.CLIENT_CACHE_SYNC_POLICY_DEFINITION__CACHE_INVALIDATION_DEFINITION:
        setCache_invalidation_definition((cache_invalidation_definition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CLIENT_CACHE_SYNC_POLICY_DEFINITION__CACHE_INVALIDATION_DEFINITION:
        setCache_invalidation_definition((cache_invalidation_definition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CLIENT_CACHE_SYNC_POLICY_DEFINITION__CACHE_INVALIDATION_DEFINITION:
        return cache_invalidation_definition != null;
    }
    return super.eIsSet(featureID);
  }

} //client_cache_sync_policy_definitionImpl
