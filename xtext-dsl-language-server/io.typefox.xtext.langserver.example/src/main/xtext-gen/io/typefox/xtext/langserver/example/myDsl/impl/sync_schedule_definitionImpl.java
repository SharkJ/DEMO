/**
 * generated by Xtext 2.13.0
 */
package io.typefox.xtext.langserver.example.myDsl.impl;

import io.typefox.xtext.langserver.example.myDsl.MyDslPackage;
import io.typefox.xtext.langserver.example.myDsl.exclude_details_setting;
import io.typefox.xtext.langserver.example.myDsl.filter_on_entity_setting;
import io.typefox.xtext.langserver.example.myDsl.grouped_push_sync_policy_definition;
import io.typefox.xtext.langserver.example.myDsl.guard_condition_definition;
import io.typefox.xtext.langserver.example.myDsl.language_dependent_definition;
import io.typefox.xtext.langserver.example.myDsl.ownership_query_definition;
import io.typefox.xtext.langserver.example.myDsl.push_sync_policy_definition;
import io.typefox.xtext.langserver.example.myDsl.sync_group_definition;
import io.typefox.xtext.langserver.example.myDsl.sync_schedule_definition;
import io.typefox.xtext.langserver.example.myDsl.user_filter_reference;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>sync schedule definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.sync_schedule_definitionImpl#getUser_filter_reference <em>User filter reference</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.sync_schedule_definitionImpl#getLanguage_dependent_definition <em>Language dependent definition</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.sync_schedule_definitionImpl#getSync_group_definition <em>Sync group definition</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.sync_schedule_definitionImpl#getFilter_on_entity_setting <em>Filter on entity setting</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.sync_schedule_definitionImpl#getString <em>String</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.sync_schedule_definitionImpl#getGuard_condition_definition <em>Guard condition definition</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.sync_schedule_definitionImpl#getOwnership_query_definition <em>Ownership query definition</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.sync_schedule_definitionImpl#getExclude_details_setting <em>Exclude details setting</em>}</li>
 * </ul>
 *
 * @generated
 */
public class sync_schedule_definitionImpl extends batch_sync_policy_definitionImpl implements sync_schedule_definition
{
  /**
   * The cached value of the '{@link #getUser_filter_reference() <em>User filter reference</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUser_filter_reference()
   * @generated
   * @ordered
   */
  protected user_filter_reference user_filter_reference;

  /**
   * The cached value of the '{@link #getLanguage_dependent_definition() <em>Language dependent definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLanguage_dependent_definition()
   * @generated
   * @ordered
   */
  protected language_dependent_definition language_dependent_definition;

  /**
   * The cached value of the '{@link #getSync_group_definition() <em>Sync group definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSync_group_definition()
   * @generated
   * @ordered
   */
  protected sync_group_definition sync_group_definition;

  /**
   * The cached value of the '{@link #getFilter_on_entity_setting() <em>Filter on entity setting</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilter_on_entity_setting()
   * @generated
   * @ordered
   */
  protected filter_on_entity_setting filter_on_entity_setting;

  /**
   * The default value of the '{@link #getString() <em>String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected static final String STRING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getString() <em>String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected String string = STRING_EDEFAULT;

  /**
   * The cached value of the '{@link #getGuard_condition_definition() <em>Guard condition definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGuard_condition_definition()
   * @generated
   * @ordered
   */
  protected guard_condition_definition guard_condition_definition;

  /**
   * The cached value of the '{@link #getOwnership_query_definition() <em>Ownership query definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnership_query_definition()
   * @generated
   * @ordered
   */
  protected ownership_query_definition ownership_query_definition;

  /**
   * The cached value of the '{@link #getExclude_details_setting() <em>Exclude details setting</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExclude_details_setting()
   * @generated
   * @ordered
   */
  protected exclude_details_setting exclude_details_setting;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected sync_schedule_definitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.SYNC_SCHEDULE_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public user_filter_reference getUser_filter_reference()
  {
    return user_filter_reference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUser_filter_reference(user_filter_reference newUser_filter_reference, NotificationChain msgs)
  {
    user_filter_reference oldUser_filter_reference = user_filter_reference;
    user_filter_reference = newUser_filter_reference;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__USER_FILTER_REFERENCE, oldUser_filter_reference, newUser_filter_reference);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUser_filter_reference(user_filter_reference newUser_filter_reference)
  {
    if (newUser_filter_reference != user_filter_reference)
    {
      NotificationChain msgs = null;
      if (user_filter_reference != null)
        msgs = ((InternalEObject)user_filter_reference).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__USER_FILTER_REFERENCE, null, msgs);
      if (newUser_filter_reference != null)
        msgs = ((InternalEObject)newUser_filter_reference).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__USER_FILTER_REFERENCE, null, msgs);
      msgs = basicSetUser_filter_reference(newUser_filter_reference, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__USER_FILTER_REFERENCE, newUser_filter_reference, newUser_filter_reference));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public language_dependent_definition getLanguage_dependent_definition()
  {
    return language_dependent_definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLanguage_dependent_definition(language_dependent_definition newLanguage_dependent_definition, NotificationChain msgs)
  {
    language_dependent_definition oldLanguage_dependent_definition = language_dependent_definition;
    language_dependent_definition = newLanguage_dependent_definition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION, oldLanguage_dependent_definition, newLanguage_dependent_definition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLanguage_dependent_definition(language_dependent_definition newLanguage_dependent_definition)
  {
    if (newLanguage_dependent_definition != language_dependent_definition)
    {
      NotificationChain msgs = null;
      if (language_dependent_definition != null)
        msgs = ((InternalEObject)language_dependent_definition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION, null, msgs);
      if (newLanguage_dependent_definition != null)
        msgs = ((InternalEObject)newLanguage_dependent_definition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION, null, msgs);
      msgs = basicSetLanguage_dependent_definition(newLanguage_dependent_definition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION, newLanguage_dependent_definition, newLanguage_dependent_definition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public sync_group_definition getSync_group_definition()
  {
    return sync_group_definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSync_group_definition(sync_group_definition newSync_group_definition, NotificationChain msgs)
  {
    sync_group_definition oldSync_group_definition = sync_group_definition;
    sync_group_definition = newSync_group_definition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__SYNC_GROUP_DEFINITION, oldSync_group_definition, newSync_group_definition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSync_group_definition(sync_group_definition newSync_group_definition)
  {
    if (newSync_group_definition != sync_group_definition)
    {
      NotificationChain msgs = null;
      if (sync_group_definition != null)
        msgs = ((InternalEObject)sync_group_definition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__SYNC_GROUP_DEFINITION, null, msgs);
      if (newSync_group_definition != null)
        msgs = ((InternalEObject)newSync_group_definition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__SYNC_GROUP_DEFINITION, null, msgs);
      msgs = basicSetSync_group_definition(newSync_group_definition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__SYNC_GROUP_DEFINITION, newSync_group_definition, newSync_group_definition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public filter_on_entity_setting getFilter_on_entity_setting()
  {
    return filter_on_entity_setting;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilter_on_entity_setting(filter_on_entity_setting newFilter_on_entity_setting, NotificationChain msgs)
  {
    filter_on_entity_setting oldFilter_on_entity_setting = filter_on_entity_setting;
    filter_on_entity_setting = newFilter_on_entity_setting;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__FILTER_ON_ENTITY_SETTING, oldFilter_on_entity_setting, newFilter_on_entity_setting);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFilter_on_entity_setting(filter_on_entity_setting newFilter_on_entity_setting)
  {
    if (newFilter_on_entity_setting != filter_on_entity_setting)
    {
      NotificationChain msgs = null;
      if (filter_on_entity_setting != null)
        msgs = ((InternalEObject)filter_on_entity_setting).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__FILTER_ON_ENTITY_SETTING, null, msgs);
      if (newFilter_on_entity_setting != null)
        msgs = ((InternalEObject)newFilter_on_entity_setting).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__FILTER_ON_ENTITY_SETTING, null, msgs);
      msgs = basicSetFilter_on_entity_setting(newFilter_on_entity_setting, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__FILTER_ON_ENTITY_SETTING, newFilter_on_entity_setting, newFilter_on_entity_setting));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getString()
  {
    return string;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setString(String newString)
  {
    String oldString = string;
    string = newString;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__STRING, oldString, string));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public guard_condition_definition getGuard_condition_definition()
  {
    return guard_condition_definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGuard_condition_definition(guard_condition_definition newGuard_condition_definition, NotificationChain msgs)
  {
    guard_condition_definition oldGuard_condition_definition = guard_condition_definition;
    guard_condition_definition = newGuard_condition_definition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__GUARD_CONDITION_DEFINITION, oldGuard_condition_definition, newGuard_condition_definition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGuard_condition_definition(guard_condition_definition newGuard_condition_definition)
  {
    if (newGuard_condition_definition != guard_condition_definition)
    {
      NotificationChain msgs = null;
      if (guard_condition_definition != null)
        msgs = ((InternalEObject)guard_condition_definition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__GUARD_CONDITION_DEFINITION, null, msgs);
      if (newGuard_condition_definition != null)
        msgs = ((InternalEObject)newGuard_condition_definition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__GUARD_CONDITION_DEFINITION, null, msgs);
      msgs = basicSetGuard_condition_definition(newGuard_condition_definition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__GUARD_CONDITION_DEFINITION, newGuard_condition_definition, newGuard_condition_definition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ownership_query_definition getOwnership_query_definition()
  {
    return ownership_query_definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnership_query_definition(ownership_query_definition newOwnership_query_definition, NotificationChain msgs)
  {
    ownership_query_definition oldOwnership_query_definition = ownership_query_definition;
    ownership_query_definition = newOwnership_query_definition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__OWNERSHIP_QUERY_DEFINITION, oldOwnership_query_definition, newOwnership_query_definition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOwnership_query_definition(ownership_query_definition newOwnership_query_definition)
  {
    if (newOwnership_query_definition != ownership_query_definition)
    {
      NotificationChain msgs = null;
      if (ownership_query_definition != null)
        msgs = ((InternalEObject)ownership_query_definition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__OWNERSHIP_QUERY_DEFINITION, null, msgs);
      if (newOwnership_query_definition != null)
        msgs = ((InternalEObject)newOwnership_query_definition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__OWNERSHIP_QUERY_DEFINITION, null, msgs);
      msgs = basicSetOwnership_query_definition(newOwnership_query_definition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__OWNERSHIP_QUERY_DEFINITION, newOwnership_query_definition, newOwnership_query_definition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public exclude_details_setting getExclude_details_setting()
  {
    return exclude_details_setting;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExclude_details_setting(exclude_details_setting newExclude_details_setting, NotificationChain msgs)
  {
    exclude_details_setting oldExclude_details_setting = exclude_details_setting;
    exclude_details_setting = newExclude_details_setting;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__EXCLUDE_DETAILS_SETTING, oldExclude_details_setting, newExclude_details_setting);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExclude_details_setting(exclude_details_setting newExclude_details_setting)
  {
    if (newExclude_details_setting != exclude_details_setting)
    {
      NotificationChain msgs = null;
      if (exclude_details_setting != null)
        msgs = ((InternalEObject)exclude_details_setting).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__EXCLUDE_DETAILS_SETTING, null, msgs);
      if (newExclude_details_setting != null)
        msgs = ((InternalEObject)newExclude_details_setting).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SYNC_SCHEDULE_DEFINITION__EXCLUDE_DETAILS_SETTING, null, msgs);
      msgs = basicSetExclude_details_setting(newExclude_details_setting, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SYNC_SCHEDULE_DEFINITION__EXCLUDE_DETAILS_SETTING, newExclude_details_setting, newExclude_details_setting));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__USER_FILTER_REFERENCE:
        return basicSetUser_filter_reference(null, msgs);
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION:
        return basicSetLanguage_dependent_definition(null, msgs);
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__SYNC_GROUP_DEFINITION:
        return basicSetSync_group_definition(null, msgs);
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__FILTER_ON_ENTITY_SETTING:
        return basicSetFilter_on_entity_setting(null, msgs);
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__GUARD_CONDITION_DEFINITION:
        return basicSetGuard_condition_definition(null, msgs);
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__OWNERSHIP_QUERY_DEFINITION:
        return basicSetOwnership_query_definition(null, msgs);
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__EXCLUDE_DETAILS_SETTING:
        return basicSetExclude_details_setting(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__USER_FILTER_REFERENCE:
        return getUser_filter_reference();
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION:
        return getLanguage_dependent_definition();
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__SYNC_GROUP_DEFINITION:
        return getSync_group_definition();
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__FILTER_ON_ENTITY_SETTING:
        return getFilter_on_entity_setting();
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__STRING:
        return getString();
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__GUARD_CONDITION_DEFINITION:
        return getGuard_condition_definition();
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__OWNERSHIP_QUERY_DEFINITION:
        return getOwnership_query_definition();
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__EXCLUDE_DETAILS_SETTING:
        return getExclude_details_setting();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__USER_FILTER_REFERENCE:
        setUser_filter_reference((user_filter_reference)newValue);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION:
        setLanguage_dependent_definition((language_dependent_definition)newValue);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__SYNC_GROUP_DEFINITION:
        setSync_group_definition((sync_group_definition)newValue);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__FILTER_ON_ENTITY_SETTING:
        setFilter_on_entity_setting((filter_on_entity_setting)newValue);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__STRING:
        setString((String)newValue);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__GUARD_CONDITION_DEFINITION:
        setGuard_condition_definition((guard_condition_definition)newValue);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__OWNERSHIP_QUERY_DEFINITION:
        setOwnership_query_definition((ownership_query_definition)newValue);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__EXCLUDE_DETAILS_SETTING:
        setExclude_details_setting((exclude_details_setting)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__USER_FILTER_REFERENCE:
        setUser_filter_reference((user_filter_reference)null);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION:
        setLanguage_dependent_definition((language_dependent_definition)null);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__SYNC_GROUP_DEFINITION:
        setSync_group_definition((sync_group_definition)null);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__FILTER_ON_ENTITY_SETTING:
        setFilter_on_entity_setting((filter_on_entity_setting)null);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__STRING:
        setString(STRING_EDEFAULT);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__GUARD_CONDITION_DEFINITION:
        setGuard_condition_definition((guard_condition_definition)null);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__OWNERSHIP_QUERY_DEFINITION:
        setOwnership_query_definition((ownership_query_definition)null);
        return;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__EXCLUDE_DETAILS_SETTING:
        setExclude_details_setting((exclude_details_setting)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__USER_FILTER_REFERENCE:
        return user_filter_reference != null;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION:
        return language_dependent_definition != null;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__SYNC_GROUP_DEFINITION:
        return sync_group_definition != null;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__FILTER_ON_ENTITY_SETTING:
        return filter_on_entity_setting != null;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__STRING:
        return STRING_EDEFAULT == null ? string != null : !STRING_EDEFAULT.equals(string);
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__GUARD_CONDITION_DEFINITION:
        return guard_condition_definition != null;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__OWNERSHIP_QUERY_DEFINITION:
        return ownership_query_definition != null;
      case MyDslPackage.SYNC_SCHEDULE_DEFINITION__EXCLUDE_DETAILS_SETTING:
        return exclude_details_setting != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == push_sync_policy_definition.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == grouped_push_sync_policy_definition.class)
    {
      switch (derivedFeatureID)
      {
        case MyDslPackage.SYNC_SCHEDULE_DEFINITION__USER_FILTER_REFERENCE: return MyDslPackage.GROUPED_PUSH_SYNC_POLICY_DEFINITION__USER_FILTER_REFERENCE;
        case MyDslPackage.SYNC_SCHEDULE_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION: return MyDslPackage.GROUPED_PUSH_SYNC_POLICY_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION;
        case MyDslPackage.SYNC_SCHEDULE_DEFINITION__SYNC_GROUP_DEFINITION: return MyDslPackage.GROUPED_PUSH_SYNC_POLICY_DEFINITION__SYNC_GROUP_DEFINITION;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == push_sync_policy_definition.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == grouped_push_sync_policy_definition.class)
    {
      switch (baseFeatureID)
      {
        case MyDslPackage.GROUPED_PUSH_SYNC_POLICY_DEFINITION__USER_FILTER_REFERENCE: return MyDslPackage.SYNC_SCHEDULE_DEFINITION__USER_FILTER_REFERENCE;
        case MyDslPackage.GROUPED_PUSH_SYNC_POLICY_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION: return MyDslPackage.SYNC_SCHEDULE_DEFINITION__LANGUAGE_DEPENDENT_DEFINITION;
        case MyDslPackage.GROUPED_PUSH_SYNC_POLICY_DEFINITION__SYNC_GROUP_DEFINITION: return MyDslPackage.SYNC_SCHEDULE_DEFINITION__SYNC_GROUP_DEFINITION;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (string: ");
    result.append(string);
    result.append(')');
    return result.toString();
  }

} //sync_schedule_definitionImpl
