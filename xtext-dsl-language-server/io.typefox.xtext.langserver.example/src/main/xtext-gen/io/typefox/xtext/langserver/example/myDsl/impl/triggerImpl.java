/**
 * generated by Xtext 2.13.0
 */
package io.typefox.xtext.langserver.example.myDsl.impl;

import io.typefox.xtext.langserver.example.myDsl.MyDslPackage;
import io.typefox.xtext.langserver.example.myDsl.guard_function;
import io.typefox.xtext.langserver.example.myDsl.mapping_arguments;
import io.typefox.xtext.langserver.example.myDsl.objkey_column;
import io.typefox.xtext.langserver.example.myDsl.objkey_mapping;
import io.typefox.xtext.langserver.example.myDsl.target_table;
import io.typefox.xtext.langserver.example.myDsl.trigger;
import io.typefox.xtext.langserver.example.myDsl.trigger_attributes;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>trigger</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.triggerImpl#getTrigger_table_name <em>Trigger table name</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.triggerImpl#getTrigger_attributes <em>Trigger attributes</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.triggerImpl#getObjkey_column <em>Objkey column</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.triggerImpl#getTarget_table <em>Target table</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.triggerImpl#getObjkey_mapping <em>Objkey mapping</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.triggerImpl#getMapping_arguments <em>Mapping arguments</em>}</li>
 *   <li>{@link io.typefox.xtext.langserver.example.myDsl.impl.triggerImpl#getGuard_function <em>Guard function</em>}</li>
 * </ul>
 *
 * @generated
 */
public class triggerImpl extends MinimalEObjectImpl.Container implements trigger
{
  /**
   * The default value of the '{@link #getTrigger_table_name() <em>Trigger table name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrigger_table_name()
   * @generated
   * @ordered
   */
  protected static final String TRIGGER_TABLE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTrigger_table_name() <em>Trigger table name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrigger_table_name()
   * @generated
   * @ordered
   */
  protected String trigger_table_name = TRIGGER_TABLE_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getTrigger_attributes() <em>Trigger attributes</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrigger_attributes()
   * @generated
   * @ordered
   */
  protected trigger_attributes trigger_attributes;

  /**
   * The cached value of the '{@link #getObjkey_column() <em>Objkey column</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjkey_column()
   * @generated
   * @ordered
   */
  protected objkey_column objkey_column;

  /**
   * The cached value of the '{@link #getTarget_table() <em>Target table</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget_table()
   * @generated
   * @ordered
   */
  protected target_table target_table;

  /**
   * The cached value of the '{@link #getObjkey_mapping() <em>Objkey mapping</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjkey_mapping()
   * @generated
   * @ordered
   */
  protected objkey_mapping objkey_mapping;

  /**
   * The cached value of the '{@link #getMapping_arguments() <em>Mapping arguments</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMapping_arguments()
   * @generated
   * @ordered
   */
  protected mapping_arguments mapping_arguments;

  /**
   * The cached value of the '{@link #getGuard_function() <em>Guard function</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGuard_function()
   * @generated
   * @ordered
   */
  protected guard_function guard_function;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected triggerImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.TRIGGER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTrigger_table_name()
  {
    return trigger_table_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTrigger_table_name(String newTrigger_table_name)
  {
    String oldTrigger_table_name = trigger_table_name;
    trigger_table_name = newTrigger_table_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__TRIGGER_TABLE_NAME, oldTrigger_table_name, trigger_table_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public trigger_attributes getTrigger_attributes()
  {
    return trigger_attributes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTrigger_attributes(trigger_attributes newTrigger_attributes, NotificationChain msgs)
  {
    trigger_attributes oldTrigger_attributes = trigger_attributes;
    trigger_attributes = newTrigger_attributes;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__TRIGGER_ATTRIBUTES, oldTrigger_attributes, newTrigger_attributes);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTrigger_attributes(trigger_attributes newTrigger_attributes)
  {
    if (newTrigger_attributes != trigger_attributes)
    {
      NotificationChain msgs = null;
      if (trigger_attributes != null)
        msgs = ((InternalEObject)trigger_attributes).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__TRIGGER_ATTRIBUTES, null, msgs);
      if (newTrigger_attributes != null)
        msgs = ((InternalEObject)newTrigger_attributes).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__TRIGGER_ATTRIBUTES, null, msgs);
      msgs = basicSetTrigger_attributes(newTrigger_attributes, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__TRIGGER_ATTRIBUTES, newTrigger_attributes, newTrigger_attributes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public objkey_column getObjkey_column()
  {
    return objkey_column;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetObjkey_column(objkey_column newObjkey_column, NotificationChain msgs)
  {
    objkey_column oldObjkey_column = objkey_column;
    objkey_column = newObjkey_column;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__OBJKEY_COLUMN, oldObjkey_column, newObjkey_column);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setObjkey_column(objkey_column newObjkey_column)
  {
    if (newObjkey_column != objkey_column)
    {
      NotificationChain msgs = null;
      if (objkey_column != null)
        msgs = ((InternalEObject)objkey_column).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__OBJKEY_COLUMN, null, msgs);
      if (newObjkey_column != null)
        msgs = ((InternalEObject)newObjkey_column).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__OBJKEY_COLUMN, null, msgs);
      msgs = basicSetObjkey_column(newObjkey_column, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__OBJKEY_COLUMN, newObjkey_column, newObjkey_column));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public target_table getTarget_table()
  {
    return target_table;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTarget_table(target_table newTarget_table, NotificationChain msgs)
  {
    target_table oldTarget_table = target_table;
    target_table = newTarget_table;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__TARGET_TABLE, oldTarget_table, newTarget_table);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTarget_table(target_table newTarget_table)
  {
    if (newTarget_table != target_table)
    {
      NotificationChain msgs = null;
      if (target_table != null)
        msgs = ((InternalEObject)target_table).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__TARGET_TABLE, null, msgs);
      if (newTarget_table != null)
        msgs = ((InternalEObject)newTarget_table).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__TARGET_TABLE, null, msgs);
      msgs = basicSetTarget_table(newTarget_table, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__TARGET_TABLE, newTarget_table, newTarget_table));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public objkey_mapping getObjkey_mapping()
  {
    return objkey_mapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetObjkey_mapping(objkey_mapping newObjkey_mapping, NotificationChain msgs)
  {
    objkey_mapping oldObjkey_mapping = objkey_mapping;
    objkey_mapping = newObjkey_mapping;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__OBJKEY_MAPPING, oldObjkey_mapping, newObjkey_mapping);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setObjkey_mapping(objkey_mapping newObjkey_mapping)
  {
    if (newObjkey_mapping != objkey_mapping)
    {
      NotificationChain msgs = null;
      if (objkey_mapping != null)
        msgs = ((InternalEObject)objkey_mapping).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__OBJKEY_MAPPING, null, msgs);
      if (newObjkey_mapping != null)
        msgs = ((InternalEObject)newObjkey_mapping).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__OBJKEY_MAPPING, null, msgs);
      msgs = basicSetObjkey_mapping(newObjkey_mapping, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__OBJKEY_MAPPING, newObjkey_mapping, newObjkey_mapping));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public mapping_arguments getMapping_arguments()
  {
    return mapping_arguments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMapping_arguments(mapping_arguments newMapping_arguments, NotificationChain msgs)
  {
    mapping_arguments oldMapping_arguments = mapping_arguments;
    mapping_arguments = newMapping_arguments;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__MAPPING_ARGUMENTS, oldMapping_arguments, newMapping_arguments);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMapping_arguments(mapping_arguments newMapping_arguments)
  {
    if (newMapping_arguments != mapping_arguments)
    {
      NotificationChain msgs = null;
      if (mapping_arguments != null)
        msgs = ((InternalEObject)mapping_arguments).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__MAPPING_ARGUMENTS, null, msgs);
      if (newMapping_arguments != null)
        msgs = ((InternalEObject)newMapping_arguments).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__MAPPING_ARGUMENTS, null, msgs);
      msgs = basicSetMapping_arguments(newMapping_arguments, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__MAPPING_ARGUMENTS, newMapping_arguments, newMapping_arguments));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public guard_function getGuard_function()
  {
    return guard_function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGuard_function(guard_function newGuard_function, NotificationChain msgs)
  {
    guard_function oldGuard_function = guard_function;
    guard_function = newGuard_function;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__GUARD_FUNCTION, oldGuard_function, newGuard_function);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGuard_function(guard_function newGuard_function)
  {
    if (newGuard_function != guard_function)
    {
      NotificationChain msgs = null;
      if (guard_function != null)
        msgs = ((InternalEObject)guard_function).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__GUARD_FUNCTION, null, msgs);
      if (newGuard_function != null)
        msgs = ((InternalEObject)newGuard_function).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TRIGGER__GUARD_FUNCTION, null, msgs);
      msgs = basicSetGuard_function(newGuard_function, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TRIGGER__GUARD_FUNCTION, newGuard_function, newGuard_function));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.TRIGGER__TRIGGER_ATTRIBUTES:
        return basicSetTrigger_attributes(null, msgs);
      case MyDslPackage.TRIGGER__OBJKEY_COLUMN:
        return basicSetObjkey_column(null, msgs);
      case MyDslPackage.TRIGGER__TARGET_TABLE:
        return basicSetTarget_table(null, msgs);
      case MyDslPackage.TRIGGER__OBJKEY_MAPPING:
        return basicSetObjkey_mapping(null, msgs);
      case MyDslPackage.TRIGGER__MAPPING_ARGUMENTS:
        return basicSetMapping_arguments(null, msgs);
      case MyDslPackage.TRIGGER__GUARD_FUNCTION:
        return basicSetGuard_function(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.TRIGGER__TRIGGER_TABLE_NAME:
        return getTrigger_table_name();
      case MyDslPackage.TRIGGER__TRIGGER_ATTRIBUTES:
        return getTrigger_attributes();
      case MyDslPackage.TRIGGER__OBJKEY_COLUMN:
        return getObjkey_column();
      case MyDslPackage.TRIGGER__TARGET_TABLE:
        return getTarget_table();
      case MyDslPackage.TRIGGER__OBJKEY_MAPPING:
        return getObjkey_mapping();
      case MyDslPackage.TRIGGER__MAPPING_ARGUMENTS:
        return getMapping_arguments();
      case MyDslPackage.TRIGGER__GUARD_FUNCTION:
        return getGuard_function();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.TRIGGER__TRIGGER_TABLE_NAME:
        setTrigger_table_name((String)newValue);
        return;
      case MyDslPackage.TRIGGER__TRIGGER_ATTRIBUTES:
        setTrigger_attributes((trigger_attributes)newValue);
        return;
      case MyDslPackage.TRIGGER__OBJKEY_COLUMN:
        setObjkey_column((objkey_column)newValue);
        return;
      case MyDslPackage.TRIGGER__TARGET_TABLE:
        setTarget_table((target_table)newValue);
        return;
      case MyDslPackage.TRIGGER__OBJKEY_MAPPING:
        setObjkey_mapping((objkey_mapping)newValue);
        return;
      case MyDslPackage.TRIGGER__MAPPING_ARGUMENTS:
        setMapping_arguments((mapping_arguments)newValue);
        return;
      case MyDslPackage.TRIGGER__GUARD_FUNCTION:
        setGuard_function((guard_function)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.TRIGGER__TRIGGER_TABLE_NAME:
        setTrigger_table_name(TRIGGER_TABLE_NAME_EDEFAULT);
        return;
      case MyDslPackage.TRIGGER__TRIGGER_ATTRIBUTES:
        setTrigger_attributes((trigger_attributes)null);
        return;
      case MyDslPackage.TRIGGER__OBJKEY_COLUMN:
        setObjkey_column((objkey_column)null);
        return;
      case MyDslPackage.TRIGGER__TARGET_TABLE:
        setTarget_table((target_table)null);
        return;
      case MyDslPackage.TRIGGER__OBJKEY_MAPPING:
        setObjkey_mapping((objkey_mapping)null);
        return;
      case MyDslPackage.TRIGGER__MAPPING_ARGUMENTS:
        setMapping_arguments((mapping_arguments)null);
        return;
      case MyDslPackage.TRIGGER__GUARD_FUNCTION:
        setGuard_function((guard_function)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.TRIGGER__TRIGGER_TABLE_NAME:
        return TRIGGER_TABLE_NAME_EDEFAULT == null ? trigger_table_name != null : !TRIGGER_TABLE_NAME_EDEFAULT.equals(trigger_table_name);
      case MyDslPackage.TRIGGER__TRIGGER_ATTRIBUTES:
        return trigger_attributes != null;
      case MyDslPackage.TRIGGER__OBJKEY_COLUMN:
        return objkey_column != null;
      case MyDslPackage.TRIGGER__TARGET_TABLE:
        return target_table != null;
      case MyDslPackage.TRIGGER__OBJKEY_MAPPING:
        return objkey_mapping != null;
      case MyDslPackage.TRIGGER__MAPPING_ARGUMENTS:
        return mapping_arguments != null;
      case MyDslPackage.TRIGGER__GUARD_FUNCTION:
        return guard_function != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (trigger_table_name: ");
    result.append(trigger_table_name);
    result.append(')');
    return result.toString();
  }

} //triggerImpl
